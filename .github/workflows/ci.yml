name: CI
permissions:
  id-token: write # required to use OIDC authentication
  contents: read # required to checkout the code from the rep

on:
  push:
    branches:
      - main
  pull_request: {}

concurrency:
  group: ci-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    environment: prod
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: npm
      - name: Install Dependencies
        run: npm ci
      - name: Lint
        run: npm run lint

  test:
    name: "Test"
    runs-on: ubuntu-latest
    environment: prod
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: npm
      - name: Install Dependencies
        run: npm ci
      - name: Run Tests
        run: npm test

  build:
    name: Build, tag, and push image to Amazon ECR
    runs-on: ubuntu-latest
    environment: prod
    needs: [lint, test]
    timeout-minutes: 10

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ECR_ARN }}
          aws-region: us-east-1
          audience: sts.amazonaws.com

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push to Amazon ECR
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          push: false
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/aws-docker-poc:unstable

      # - name: Build, tag, and push image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: aws-docker-poc
      #     IMAGE_TAG: unstable
      #   run: |
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
